[32m[0114 18:16:04 @logger.py:70][0m Argv: cifar10-densenet.py
[32m[0114 18:16:04 @utils.py:98][0m TENSORPACK_DATASET not set, using /home/per-andre/Projects/tensorpack/tensorpack/dataflow/dataset for dataset.
[32m[0114 18:16:04 @cifar.py:34][0m Found cifar10 data in /home/per-andre/Projects/tensorpack/tensorpack/dataflow/dataset/cifar10_data.
[32m[0114 18:16:06 @cifar.py:34][0m Found cifar10 data in /home/per-andre/Projects/tensorpack/tensorpack/dataflow/dataset/cifar10_data.
[32m[0114 18:16:07 @common.py:82][0m conv0 input: [None, 32, 32, 3]
[32m[0114 18:16:07 @common.py:90][0m conv0 output: [None, 32, 32, 16]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.0/conv1 input: [None, 32, 32, 16]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.0/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.1/conv1 input: [None, 32, 32, 28]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.1/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.2/conv1 input: [None, 32, 32, 40]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.2/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.3/conv1 input: [None, 32, 32, 52]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.3/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.4/conv1 input: [None, 32, 32, 64]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.4/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.5/conv1 input: [None, 32, 32, 76]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.5/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.6/conv1 input: [None, 32, 32, 88]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.6/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.7/conv1 input: [None, 32, 32, 100]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.7/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.8/conv1 input: [None, 32, 32, 112]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.8/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.9/conv1 input: [None, 32, 32, 124]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.9/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.10/conv1 input: [None, 32, 32, 136]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.10/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/dense_layer.11/conv1 input: [None, 32, 32, 148]
[32m[0114 18:16:07 @common.py:90][0m block1/dense_layer.11/conv1 output: [None, 32, 32, 12]
[32m[0114 18:16:07 @common.py:82][0m block1/transition1/conv1 input: [None, 32, 32, 160]
[32m[0114 18:16:07 @common.py:90][0m block1/transition1/conv1 output: [None, 32, 32, 160]
[32m[0114 18:16:07 @common.py:82][0m block1/transition1/pool input: [None, 32, 32, 160]
[32m[0114 18:16:07 @common.py:90][0m block1/transition1/pool output: [None, 16, 16, 160]
[32m[0114 18:16:07 @common.py:82][0m block2/dense_layer.0/conv1 input: [None, 16, 16, 160]
[32m[0114 18:16:07 @common.py:90][0m block2/dense_layer.0/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:07 @common.py:82][0m block2/dense_layer.1/conv1 input: [None, 16, 16, 172]
[32m[0114 18:16:07 @common.py:90][0m block2/dense_layer.1/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:07 @common.py:82][0m block2/dense_layer.2/conv1 input: [None, 16, 16, 184]
[32m[0114 18:16:07 @common.py:90][0m block2/dense_layer.2/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:07 @common.py:82][0m block2/dense_layer.3/conv1 input: [None, 16, 16, 196]
[32m[0114 18:16:07 @common.py:90][0m block2/dense_layer.3/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:07 @common.py:82][0m block2/dense_layer.4/conv1 input: [None, 16, 16, 208]
[32m[0114 18:16:07 @common.py:90][0m block2/dense_layer.4/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:07 @common.py:82][0m block2/dense_layer.5/conv1 input: [None, 16, 16, 220]
[32m[0114 18:16:07 @common.py:90][0m block2/dense_layer.5/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:07 @common.py:82][0m block2/dense_layer.6/conv1 input: [None, 16, 16, 232]
[32m[0114 18:16:08 @common.py:90][0m block2/dense_layer.6/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:08 @common.py:82][0m block2/dense_layer.7/conv1 input: [None, 16, 16, 244]
[32m[0114 18:16:08 @common.py:90][0m block2/dense_layer.7/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:08 @common.py:82][0m block2/dense_layer.8/conv1 input: [None, 16, 16, 256]
[32m[0114 18:16:08 @common.py:90][0m block2/dense_layer.8/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:08 @common.py:82][0m block2/dense_layer.9/conv1 input: [None, 16, 16, 268]
[32m[0114 18:16:08 @common.py:90][0m block2/dense_layer.9/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:08 @common.py:82][0m block2/dense_layer.10/conv1 input: [None, 16, 16, 280]
[32m[0114 18:16:08 @common.py:90][0m block2/dense_layer.10/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:08 @common.py:82][0m block2/dense_layer.11/conv1 input: [None, 16, 16, 292]
[32m[0114 18:16:08 @common.py:90][0m block2/dense_layer.11/conv1 output: [None, 16, 16, 12]
[32m[0114 18:16:08 @common.py:82][0m block2/transition2/conv1 input: [None, 16, 16, 304]
[32m[0114 18:16:08 @common.py:90][0m block2/transition2/conv1 output: [None, 16, 16, 304]
[32m[0114 18:16:08 @common.py:82][0m block2/transition2/pool input: [None, 16, 16, 304]
[32m[0114 18:16:08 @common.py:90][0m block2/transition2/pool output: [None, 8, 8, 304]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.0/conv1 input: [None, 8, 8, 304]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.0/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.1/conv1 input: [None, 8, 8, 316]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.1/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.2/conv1 input: [None, 8, 8, 328]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.2/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.3/conv1 input: [None, 8, 8, 340]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.3/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.4/conv1 input: [None, 8, 8, 352]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.4/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.5/conv1 input: [None, 8, 8, 364]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.5/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.6/conv1 input: [None, 8, 8, 376]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.6/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.7/conv1 input: [None, 8, 8, 388]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.7/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.8/conv1 input: [None, 8, 8, 400]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.8/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.9/conv1 input: [None, 8, 8, 412]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.9/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.10/conv1 input: [None, 8, 8, 424]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.10/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m block3/dense_layer.11/conv1 input: [None, 8, 8, 436]
[32m[0114 18:16:08 @common.py:90][0m block3/dense_layer.11/conv1 output: [None, 8, 8, 12]
[32m[0114 18:16:08 @common.py:82][0m gap input: [None, 8, 8, 448]
[32m[0114 18:16:08 @common.py:90][0m gap output: [None, 448]
[32m[0114 18:16:09 @common.py:82][0m linear input: [None, 448]
[32m[0114 18:16:09 @common.py:90][0m linear output: [None, 10]
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for conv0/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.0/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.1/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.2/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.3/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.4/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.5/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.6/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.7/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.8/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.9/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.10/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/dense_layer.11/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block1/transition1/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.0/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.1/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.2/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.3/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.4/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.5/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.6/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.7/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.8/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.9/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.10/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/dense_layer.11/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block2/transition2/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.0/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.1/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.2/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.3/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.4/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.5/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.6/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.7/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.8/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.9/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.10/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for block3/dense_layer.11/conv1/W:0
[32m[0114 18:16:09 @regularize.py:18][0m Apply regularizer for linear/W:0
[32m[0114 18:16:09 @summary.py:66][0m [5m[31mWRN[0m [Deprecated] Use positional args to call add_param_summary() instead of a list.
[32m[0114 18:16:11 @modelutils.py:27][0m [36mModel Parameters: [0m
conv0/W:0: shape=[3, 3, 3, 16], dim=432
block1/dense_layer.0/bn1/beta:0: shape=[16], dim=16
block1/dense_layer.0/bn1/gamma:0: shape=[16], dim=16
block1/dense_layer.0/conv1/W:0: shape=[3, 3, 16, 12], dim=1728
block1/dense_layer.1/bn1/beta:0: shape=[28], dim=28
block1/dense_layer.1/bn1/gamma:0: shape=[28], dim=28
block1/dense_layer.1/conv1/W:0: shape=[3, 3, 28, 12], dim=3024
block1/dense_layer.2/bn1/beta:0: shape=[40], dim=40
block1/dense_layer.2/bn1/gamma:0: shape=[40], dim=40
block1/dense_layer.2/conv1/W:0: shape=[3, 3, 40, 12], dim=4320
block1/dense_layer.3/bn1/beta:0: shape=[52], dim=52
block1/dense_layer.3/bn1/gamma:0: shape=[52], dim=52
block1/dense_layer.3/conv1/W:0: shape=[3, 3, 52, 12], dim=5616
block1/dense_layer.4/bn1/beta:0: shape=[64], dim=64
block1/dense_layer.4/bn1/gamma:0: shape=[64], dim=64
block1/dense_layer.4/conv1/W:0: shape=[3, 3, 64, 12], dim=6912
block1/dense_layer.5/bn1/beta:0: shape=[76], dim=76
block1/dense_layer.5/bn1/gamma:0: shape=[76], dim=76
block1/dense_layer.5/conv1/W:0: shape=[3, 3, 76, 12], dim=8208
block1/dense_layer.6/bn1/beta:0: shape=[88], dim=88
block1/dense_layer.6/bn1/gamma:0: shape=[88], dim=88
block1/dense_layer.6/conv1/W:0: shape=[3, 3, 88, 12], dim=9504
block1/dense_layer.7/bn1/beta:0: shape=[100], dim=100
block1/dense_layer.7/bn1/gamma:0: shape=[100], dim=100
block1/dense_layer.7/conv1/W:0: shape=[3, 3, 100, 12], dim=10800
block1/dense_layer.8/bn1/beta:0: shape=[112], dim=112
block1/dense_layer.8/bn1/gamma:0: shape=[112], dim=112
block1/dense_layer.8/conv1/W:0: shape=[3, 3, 112, 12], dim=12096
block1/dense_layer.9/bn1/beta:0: shape=[124], dim=124
block1/dense_layer.9/bn1/gamma:0: shape=[124], dim=124
block1/dense_layer.9/conv1/W:0: shape=[3, 3, 124, 12], dim=13392
block1/dense_layer.10/bn1/beta:0: shape=[136], dim=136
block1/dense_layer.10/bn1/gamma:0: shape=[136], dim=136
block1/dense_layer.10/conv1/W:0: shape=[3, 3, 136, 12], dim=14688
block1/dense_layer.11/bn1/beta:0: shape=[148], dim=148
block1/dense_layer.11/bn1/gamma:0: shape=[148], dim=148
block1/dense_layer.11/conv1/W:0: shape=[3, 3, 148, 12], dim=15984
block1/transition1/bn1/beta:0: shape=[160], dim=160
block1/transition1/bn1/gamma:0: shape=[160], dim=160
block1/transition1/conv1/W:0: shape=[1, 1, 160, 160], dim=25600
block2/dense_layer.0/bn1/beta:0: shape=[160], dim=160
block2/dense_layer.0/bn1/gamma:0: shape=[160], dim=160
block2/dense_layer.0/conv1/W:0: shape=[3, 3, 160, 12], dim=17280
block2/dense_layer.1/bn1/beta:0: shape=[172], dim=172
block2/dense_layer.1/bn1/gamma:0: shape=[172], dim=172
block2/dense_layer.1/conv1/W:0: shape=[3, 3, 172, 12], dim=18576
block2/dense_layer.2/bn1/beta:0: shape=[184], dim=184
block2/dense_layer.2/bn1/gamma:0: shape=[184], dim=184
block2/dense_layer.2/conv1/W:0: shape=[3, 3, 184, 12], dim=19872
block2/dense_layer.3/bn1/beta:0: shape=[196], dim=196
block2/dense_layer.3/bn1/gamma:0: shape=[196], dim=196
block2/dense_layer.3/conv1/W:0: shape=[3, 3, 196, 12], dim=21168
block2/dense_layer.4/bn1/beta:0: shape=[208], dim=208
block2/dense_layer.4/bn1/gamma:0: shape=[208], dim=208
block2/dense_layer.4/conv1/W:0: shape=[3, 3, 208, 12], dim=22464
block2/dense_layer.5/bn1/beta:0: shape=[220], dim=220
block2/dense_layer.5/bn1/gamma:0: shape=[220], dim=220
block2/dense_layer.5/conv1/W:0: shape=[3, 3, 220, 12], dim=23760
block2/dense_layer.6/bn1/beta:0: shape=[232], dim=232
block2/dense_layer.6/bn1/gamma:0: shape=[232], dim=232
block2/dense_layer.6/conv1/W:0: shape=[3, 3, 232, 12], dim=25056
block2/dense_layer.7/bn1/beta:0: shape=[244], dim=244
block2/dense_layer.7/bn1/gamma:0: shape=[244], dim=244
block2/dense_layer.7/conv1/W:0: shape=[3, 3, 244, 12], dim=26352
block2/dense_layer.8/bn1/beta:0: shape=[256], dim=256
block2/dense_layer.8/bn1/gamma:0: shape=[256], dim=256
block2/dense_layer.8/conv1/W:0: shape=[3, 3, 256, 12], dim=27648
block2/dense_layer.9/bn1/beta:0: shape=[268], dim=268
block2/dense_layer.9/bn1/gamma:0: shape=[268], dim=268
block2/dense_layer.9/conv1/W:0: shape=[3, 3, 268, 12], dim=28944
block2/dense_layer.10/bn1/beta:0: shape=[280], dim=280
block2/dense_layer.10/bn1/gamma:0: shape=[280], dim=280
block2/dense_layer.10/conv1/W:0: shape=[3, 3, 280, 12], dim=30240
block2/dense_layer.11/bn1/beta:0: shape=[292], dim=292
block2/dense_layer.11/bn1/gamma:0: shape=[292], dim=292
block2/dense_layer.11/conv1/W:0: shape=[3, 3, 292, 12], dim=31536
block2/transition2/bn1/beta:0: shape=[304], dim=304
block2/transition2/bn1/gamma:0: shape=[304], dim=304
block2/transition2/conv1/W:0: shape=[1, 1, 304, 304], dim=92416
block3/dense_layer.0/bn1/beta:0: shape=[304], dim=304
block3/dense_layer.0/bn1/gamma:0: shape=[304], dim=304
block3/dense_layer.0/conv1/W:0: shape=[3, 3, 304, 12], dim=32832
block3/dense_layer.1/bn1/beta:0: shape=[316], dim=316
block3/dense_layer.1/bn1/gamma:0: shape=[316], dim=316
block3/dense_layer.1/conv1/W:0: shape=[3, 3, 316, 12], dim=34128
block3/dense_layer.2/bn1/beta:0: shape=[328], dim=328
block3/dense_layer.2/bn1/gamma:0: shape=[328], dim=328
block3/dense_layer.2/conv1/W:0: shape=[3, 3, 328, 12], dim=35424
block3/dense_layer.3/bn1/beta:0: shape=[340], dim=340
block3/dense_layer.3/bn1/gamma:0: shape=[340], dim=340
block3/dense_layer.3/conv1/W:0: shape=[3, 3, 340, 12], dim=36720
block3/dense_layer.4/bn1/beta:0: shape=[352], dim=352
block3/dense_layer.4/bn1/gamma:0: shape=[352], dim=352
block3/dense_layer.4/conv1/W:0: shape=[3, 3, 352, 12], dim=38016
block3/dense_layer.5/bn1/beta:0: shape=[364], dim=364
block3/dense_layer.5/bn1/gamma:0: shape=[364], dim=364
block3/dense_layer.5/conv1/W:0: shape=[3, 3, 364, 12], dim=39312
block3/dense_layer.6/bn1/beta:0: shape=[376], dim=376
block3/dense_layer.6/bn1/gamma:0: shape=[376], dim=376
block3/dense_layer.6/conv1/W:0: shape=[3, 3, 376, 12], dim=40608
block3/dense_layer.7/bn1/beta:0: shape=[388], dim=388
block3/dense_layer.7/bn1/gamma:0: shape=[388], dim=388
block3/dense_layer.7/conv1/W:0: shape=[3, 3, 388, 12], dim=41904
block3/dense_layer.8/bn1/beta:0: shape=[400], dim=400
block3/dense_layer.8/bn1/gamma:0: shape=[400], dim=400
block3/dense_layer.8/conv1/W:0: shape=[3, 3, 400, 12], dim=43200
block3/dense_layer.9/bn1/beta:0: shape=[412], dim=412
block3/dense_layer.9/bn1/gamma:0: shape=[412], dim=412
block3/dense_layer.9/conv1/W:0: shape=[3, 3, 412, 12], dim=44496
block3/dense_layer.10/bn1/beta:0: shape=[424], dim=424
block3/dense_layer.10/bn1/gamma:0: shape=[424], dim=424
block3/dense_layer.10/conv1/W:0: shape=[3, 3, 424, 12], dim=45792
block3/dense_layer.11/bn1/beta:0: shape=[436], dim=436
block3/dense_layer.11/bn1/gamma:0: shape=[436], dim=436
block3/dense_layer.11/conv1/W:0: shape=[3, 3, 436, 12], dim=47088
bnlast/beta:0: shape=[448], dim=448
bnlast/gamma:0: shape=[448], dim=448
linear/W:0: shape=[448, 10], dim=4480
linear/b:0: shape=[10], dim=10
[36mTotal param=1019722 (3.889931 MB assuming all float32)[0m
[32m[0114 18:16:11 @base.py:130][0m Setup callbacks ...
[32m[0114 18:16:13 @base.py:156][0m Building graph for predictor tower 0...
[32m[0114 18:16:22 @base.py:140][0m Initializing graph variables ...
[32m[0114 18:16:24 @base.py:161][0m Start training with global_step=0
[32m[0114 18:16:24 @timer.py:42][0m Start Epoch 1 (global_step 781) ...
[32m[0114 18:21:55 @base.py:180][0m Detected Ctrl+C and shutdown training.
